apply plugin: 'com.android.library'
apply plugin: 'maven'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion '28.0.3'
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName           : project.getName(),
                             "room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }

    sourceSets {
        main {
            resources.srcDirs = ['src/main/resources', 'src/main/resources/']
            jniLibs.srcDirs = ['libs']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'jsr305'
    })
    testImplementation rootProject.ext.dependencies["junit"]
    debugImplementation rootProject.ext.dependencies["leakcanary-android"]
    releaseImplementation rootProject.ext.dependencies["leakcanary-android-no-op"]
    api rootProject.ext.dependencies["multidex"]
    api rootProject.ext.dependencies["room-runtime"]
    api rootProject.ext.dependencies["arouter"]
    annotationProcessor rootProject.ext.dependencies["room-compiler"]
    api rootProject.ext.dependencies["appcompat"]
    api rootProject.ext.dependencies["recyclerview"]

    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["logging-interceptor"]
    api rootProject.ext.dependencies["converter-gson"]
    api rootProject.ext.dependencies["glide"]
    api rootProject.ext.dependencies["lifecycle-runtime"]
    api rootProject.ext.dependencies["lifecycle-extensions"]
    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["rxandroid"]
    api rootProject.ext.dependencies["rxrelay"]
    api rootProject.ext.dependencies["dagger"]
    api rootProject.ext.dependencies["dagger-android"]

    api rootProject.ext.dependencies["dagger-android-support"]
    annotationProcessor rootProject.ext.dependencies["dagger-android-processor"]
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
    annotationProcessor rootProject.ext.dependencies["dagger-android-compiler"]
//    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
    api rootProject.ext.dependencies["timber"]
    api rootProject.ext.dependencies["fastjson"]
    api project(':library_common')
}
